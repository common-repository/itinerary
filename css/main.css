/*
.w-itinerary {
  // Core variables and mixins
  @import "bootstrap/mixins";
  //Use above for base

  // Reset and dependencies
  @import "bootstrap/normalize";
  @import "bootstrap/print";
  @import "bootstrap/glyphicons";

  // Core CSS
  @import "bootstrap/scaffolding";
  @import "bootstrap/type";
  @import "bootstrap/code";
  @import "bootstrap/grid";
  @import "bootstrap/tables";
  @import "bootstrap/forms";
  @import "bootstrap/buttons";

  // Components
  @import "bootstrap/component-animations";
  @import "bootstrap/dropdowns";
  @import "bootstrap/button-groups";
  @import "bootstrap/input-groups";
  @import "bootstrap/navs";
  @import "bootstrap/navbar";
  @import "bootstrap/breadcrumbs";
  @import "bootstrap/pagination";
  @import "bootstrap/pager";
  @import "bootstrap/labels";
  @import "bootstrap/badges";
  @import "bootstrap/jumbotron";
  @import "bootstrap/thumbnails";
  @import "bootstrap/alerts";
  @import "bootstrap/progress-bars";
  @import "bootstrap/media";
  @import "bootstrap/list-group";
  @import "bootstrap/panels";
  @import "bootstrap/responsive-embed";
  @import "bootstrap/wells";
  @import "bootstrap/close";

  // Components w/ JavaScript
  @import "bootstrap/modals";
  @import "bootstrap/tooltip";
  @import "bootstrap/popovers";
  @import "bootstrap/carousel";

  // Utility classes
  @import "bootstrap/utilities";
  @import "bootstrap/responsive-utilities";
}
*/
/* src/scss/atoms/_form-input.scss */
/* src/scss/molecules/_itinerary-buttons.scss */
.itinerary-buttons {
  margin: 10px 15px; }
  .itinerary-buttons::after {
    display: block;
    clear: both;
    content: ''; }

.btn-itinerary-group .btn-itinerary:not(:first-of-type) {
  margin-left: 10px; }

.btn-itinerary-group.right {
  text-align: right; }
  .btn-itinerary-group.right .btn-itinerary:not(:last-of-type) {
    margin-right: 10px; }

.btn-itinerary {
  font-size: 20px;
  cursor: pointer;
  transition: 400ms all ease-in-out; }
  .btn-itinerary::before,
  .btn-itinerary .icon::before {
    font-family: FontAwesome; }
  .btn-itinerary.working {
    animation: itinerary-btn-working 750ms infinite alternate; }
  .btn-itinerary.add .icon::before {
    content: "\f006"; }
  .btn-itinerary.remove .icon::before {
    content: "\f005"; }
  .btn-itinerary.view {
    color: #fff;
    text-decoration: none; }
    .btn-itinerary.view::before {
      padding-right: 10px;
      content: "\f03a"; }
  .btn-itinerary.pdf {
    text-decoration: none;
    font-size: 16px; }
    .btn-itinerary.pdf::before {
      padding-right: 6px;
      content: "\f1c1"; }
  .btn-itinerary.print {
    text-decoration: none;
    font-size: 16px; }
    .btn-itinerary.print::before {
      padding-right: 6px;
      content: "\f02f"; }

/* src/scss/molecules/_itinerary-garage-stop.scss */
.itinerary-garage-stop-wrap.ui-sortable-placeholder {
  visibility: visible !important;
  opacity: .4; }
  .itinerary-garage-stop-wrap.ui-sortable-placeholder .btn-itinerary {
    display: none; }

.itinerary-garage-stop-wrap .itinerary-garage-stop {
  margin-top: 20px;
  background: #fff; }
  .itinerary-garage-stop-wrap .itinerary-garage-stop .btn-itinerary {
    position: absolute;
    right: 25px;
    top: 25px;
    color: white;
    text-shadow: 0px 0px 2px black; }
    .itinerary-garage-stop-wrap .itinerary-garage-stop .btn-itinerary.order {
      top: auto;
      bottom: 15px;
      cursor: pointer; }
  .itinerary-garage-stop-wrap .itinerary-garage-stop .activity-box {
    margin-top: 15px;
    background-color: get-color("color-4-light", 0.7);
    min-height: 100%; }
    .itinerary-garage-stop-wrap .itinerary-garage-stop .activity-box a {
      text-decoration: none;
      color: #fff; }
    .itinerary-garage-stop-wrap .itinerary-garage-stop .activity-box .activity-box-image {
      background-size: cover;
      background-position: center center;
      height: 170px;
      overflow: hidden; }
      .itinerary-garage-stop-wrap .itinerary-garage-stop .activity-box .activity-box-image img {
        display: none; }
    .itinerary-garage-stop-wrap .itinerary-garage-stop .activity-box .activity-box-text {
      padding: 10px 20px;
      color: #333; }

/* src/scss/molecules/_card.scss */
.xs-card {
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.73);
  border-radius: 2px;
  outline: none; }
  @media (min-width: 768px) {
    .xs-card {
      box-shadow: none; } }

.card, .itinerary-garage-stop-wrap .itinerary-garage-stop, .itinerary-garage-stop-wrap .itinerary-garage-stop .activity-box {
  box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.73);
  border-radius: 2px;
  outline: none; }

/* src/scss/molecules/_card-section.scss */
.card-section {
  padding: 20px;
  background: #fff;
  border: 1px solid get-color("gray"); }

/* src/scss/organisms/_itinerary-garage.scss */
body.itinerary-garage-viewing {
  overflow: hidden; }

.itinerary-garage {
  position: fixed;
  bottom: 0;
  right: 0;
  background: rgba(47, 59, 62, 0.95);
  max-height: 0;
  height: 100%;
  width: 0;
  overflow: visible;
  z-index: 99999;
  transition: all 300ms linear; }
  .itinerary-garage h3 {
    color: white; }
  .itinerary-garage.initializing {
    z-index: -99999;
    width: 100%;
    opacity: 0; }
    .itinerary-garage.initializing .itinerary-garage-inner {
      height: auto;
      width: 100%; }
    .itinerary-garage.initializing .itinerary-garage-contents {
      max-height: 100%;
      width: 100%; }
  .itinerary-garage.itinerary-garage-viewing {
    opacity: 1;
    height: 100%;
    max-height: 100%;
    width: 100%;
    z-index: 99999999; }
    .itinerary-garage.itinerary-garage-viewing .itinerary-garage-inner {
      overflow-y: auto;
      overflow-x: hidden; }
  .itinerary-garage .itinerary-garage-inner {
    position: relative;
    height: 100%;
    width: 100%;
    transition: all 300ms linear; }
  .itinerary-garage .itinerary-garage-toggle__wrap {
    display: inline-block !important;
    position: fixed;
    bottom: 10px;
    right: 10px;
    margin: 0;
    padding: 10px;
    background: #000;
    color: #fff;
    cursor: pointer;
    z-index: 9;
    transition: 300ms all linear; }
    .itinerary-garage .itinerary-garage-toggle__wrap .itinerary-buttons {
      margin-left: 0;
      margin-right: 0;
      margin-top: 0; }
      .itinerary-garage .itinerary-garage-toggle__wrap .itinerary-buttons .btn-itinerary {
        font-size: 14px; }
    .itinerary-garage .itinerary-garage-toggle__wrap h4 {
      position: relative;
      margin-bottom: 0;
      text-transform: none;
      font-variant: small-caps;
      white-space: nowrap;
      color: #fff;
      padding-right: 40px; }
      .itinerary-garage .itinerary-garage-toggle__wrap h4::before {
        font-family: FontAwesome;
        content: "\f107";
        margin-left: 10px;
        position: absolute;
        right: 10px;
        top: 7px;
        opacity: 0;
        transform: scaleY(0);
        transform-origin: center;
        transition: 400ms all linear; }
      .itinerary-garage .itinerary-garage-toggle__wrap h4::after {
        font-family: FontAwesome;
        content: "\f106";
        position: absolute;
        right: 0;
        bottom: 0; }
      .itinerary-garage .itinerary-garage-toggle__wrap h4 .itinerary-stop-count {
        display: inline-block;
        position: relative;
        margin-left: 10px;
        padding: 0;
        background: white;
        font-size: 14px;
        color: #000;
        text-align: center;
        vertical-align: middle;
        border-radius: 50%;
        line-height: 25px;
        height: 25px;
        width: 25px; }
        .itinerary-garage .itinerary-garage-toggle__wrap h4 .itinerary-stop-count::after {
          content: '';
          position: absolute;
          top: 50%;
          left: 50%;
          height: 150%;
          width: 0;
          max-height: 0;
          background: get-color("color-1", 0.03);
          border-radius: 50%;
          transform: translate(-50%, -50%);
          transition: 300ms all linear; }
        .itinerary-garage .itinerary-garage-toggle__wrap h4 .itinerary-stop-count::before {
          content: '';
          position: absolute;
          top: 50%;
          left: 50%;
          height: 110%;
          width: 0;
          max-height: 0;
          background: get-color("color-1", 0.03);
          border-radius: 50%;
          transform: translate(-50%, -50%);
          transition: 300ms all linear; }
        .itinerary-garage .itinerary-garage-toggle__wrap h4 .itinerary-stop-count.added::before {
          max-height: 110%;
          width: 110%;
          border: 2px solid #fff;
          z-index: 1; }
        .itinerary-garage .itinerary-garage-toggle__wrap h4 .itinerary-stop-count.added::after {
          max-height: 150%;
          width: 150%;
          box-shadow: 0px 0px 6px 3px get-color("white", 0.6);
          z-index: 0; }
    .itinerary-garage .itinerary-garage-toggle__wrap .icon-bar {
      background-color: #fff; }
  .itinerary-garage.itinerary-garage-viewing .itinerary-garage-toggle h4::before {
    top: 2px;
    right: 0;
    opacity: 1;
    transform: scaleY(1); }
  .itinerary-garage.itinerary-garage-viewing .itinerary-garage-toggle span {
    background-color: get-color("color-1"); }
  .itinerary-garage .itinerary-garage-contents {
    display: block;
    position: absolute;
    padding-top: 20px;
    padding-bottom: 20px;
    height: 100%;
    max-height: 0;
    width: 100%;
    transition: all 300ms ease-in-out; }
    .itinerary-garage .itinerary-garage-contents.visible {
      bottom: 0;
      right: 0;
      padding: 10px;
      max-height: 100%;
      width: 100%; }
    .itinerary-garage .itinerary-garage-contents .itinerary-garage-stops {
      margin: 20px 0; }
    .itinerary-garage .itinerary-garage-contents .search-result {
      background-color: get-color("color-2"); }
      .itinerary-garage .itinerary-garage-contents .search-result,
      .itinerary-garage .itinerary-garage-contents .search-result a {
        color: #fff; }
  .itinerary-garage .no-stops-text {
    color: #fff; }

@media (min-width: 768px) and (max-width: 991px) {
  .itinerary-garage-stop-wrap:nth-of-type(3n+4) {
    clear: both; } }

@media (min-width: 992px) {
  .itinerary-garage-stop-wrap:nth-of-type(4n+5) {
    clear: left; } }

/* src/scss/organisms/_itinerary-garage-stops.scss */
/* src/scss/organisms/_settings.scss */
/* src/scss/organisms/_header.scss */
.pdf-stop {
  margin-bottom: 40px;
  padding-bottom: 40px;
  border-bottom: 1px solid #333; }

/* src/scss/pages/_my-itinerary.scss */
#my-itinerary .btn-itinerary {
  padding-left: 20px; }
  #my-itinerary .btn-itinerary:first-of-type {
    padding-left: 0; }

#my-itinerary .itinerary-loader {
  display: block;
  margin: 0 auto;
  text-align: center;
  padding: 10vh 5vw;
  font-size: 48px; }

#my-itinerary .itinerary-stop {
  margin: 20px 0;
  padding: 20px 0; }
  #my-itinerary .itinerary-stop:not(:first-of-type) {
    border-top: 2px solid #eee; }

#my-itinerary ~ .itinerary-buttons {
  display: none; }

/* src/scss/pages/_itinerary-settings-index.scss */
.itinerary-settings-index {
  background: rgba(255, 255, 255, 0.5); }

/* src/scss/pages/_admin-itinerary-list.scss */
@media (min-width: 768px) {
  .admin-itinerary:nth-of-type(3n+4) {
    clear: left; } }

@media print {
  .itinerary-garage,
  .btn-itinerary {
    display: none; } }

/* src/scss/partials/_header.scss */
/* src/scss/partials/_footer.scss */
/* src/scss/layout/_grid.scss */
.itinerary-container::after,
.itinerary-row::after,
.itinerary-column::after {
  content: '';
  display: block;
  min-height: 1px;
  clear: both; }

.itinerary-container {
  margin: 0 auto;
  padding-left: 15px;
  padding-right: 15px;
  width: 100%;
  max-width: 1170px; }
  .itinerary-container * {
    box-sizing: border-box; }

.itinerary-row {
  margin-left: -15px;
  margin-right: -15px; }

[class*=itinerary-col-] {
  display: block;
  position: relative;
  padding-left: 15px;
  padding-right: 15px;
  float: left; }

img {
  max-width: 100% !important;
  height: auto; }

.itinerary-col-xs-1 {
  width: 8.33333%; }

.itinerary-col-xs-2 {
  width: 16.66667%; }

.itinerary-col-xs-3 {
  width: 25%; }

.itinerary-col-xs-4 {
  width: 33.33333%; }

.itinerary-col-xs-5 {
  width: 41.66667%; }

.itinerary-col-xs-6 {
  width: 50%; }

.itinerary-col-xs-7 {
  width: 58.33333%; }

.itinerary-col-xs-8 {
  width: 66.66667%; }

.itinerary-col-xs-9 {
  width: 75%; }

.itinerary-col-xs-10 {
  width: 83.33333%; }

.itinerary-col-xs-11 {
  width: 91.66667%; }

.itinerary-col-xs-12 {
  width: 100%; }

@media (min-width: 768px) {
  .itinerary-col-sm-1 {
    width: 8.33333%; }
  .itinerary-col-sm-2 {
    width: 16.66667%; }
  .itinerary-col-sm-3 {
    width: 25%; }
  .itinerary-col-sm-4 {
    width: 33.33333%; }
  .itinerary-col-sm-5 {
    width: 41.66667%; }
  .itinerary-col-sm-6 {
    width: 50%; }
  .itinerary-col-sm-7 {
    width: 58.33333%; }
  .itinerary-col-sm-8 {
    width: 66.66667%; }
  .itinerary-col-sm-9 {
    width: 75%; }
  .itinerary-col-sm-10 {
    width: 83.33333%; }
  .itinerary-col-sm-11 {
    width: 91.66667%; }
  .itinerary-col-sm-12 {
    width: 100%; } }

@media (min-width: 992px) {
  .itinerary-col-md-1 {
    width: 8.33333%; }
  .itinerary-col-md-2 {
    width: 16.66667%; }
  .itinerary-col-md-3 {
    width: 25%; }
  .itinerary-col-md-4 {
    width: 33.33333%; }
  .itinerary-col-md-5 {
    width: 41.66667%; }
  .itinerary-col-md-6 {
    width: 50%; }
  .itinerary-col-md-7 {
    width: 58.33333%; }
  .itinerary-col-md-8 {
    width: 66.66667%; }
  .itinerary-col-md-9 {
    width: 75%; }
  .itinerary-col-md-10 {
    width: 83.33333%; }
  .itinerary-col-md-11 {
    width: 91.66667%; }
  .itinerary-col-md-12 {
    width: 100%; } }

@media (min-width: 1200px) {
  .itinerary-col-lg-1 {
    width: 8.33333%; }
  .itinerary-col-lg-2 {
    width: 16.66667%; }
  .itinerary-col-lg-3 {
    width: 25%; }
  .itinerary-col-lg-4 {
    width: 33.33333%; }
  .itinerary-col-lg-5 {
    width: 41.66667%; }
  .itinerary-col-lg-6 {
    width: 50%; }
  .itinerary-col-lg-7 {
    width: 58.33333%; }
  .itinerary-col-lg-8 {
    width: 66.66667%; }
  .itinerary-col-lg-9 {
    width: 75%; }
  .itinerary-col-lg-10 {
    width: 83.33333%; }
  .itinerary-col-lg-11 {
    width: 91.66667%; }
  .itinerary-col-lg-12 {
    width: 100%; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
